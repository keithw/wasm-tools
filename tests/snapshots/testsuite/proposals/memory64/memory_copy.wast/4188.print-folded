(module
  (type (;0;) (func))
  (type (;1;) (func (param i32 i32 i32) (result i32)))
  (memory (;0;) 1 1)
  (export "test" (func 0))
  (export "checkRange" (func 1))
  (func (;0;) (type 0)
    (memory.fill
      (i32.const 10)
      (i32.const 85)
      (i32.const 10))
    (memory.copy
      (i32.const 16)
      (i32.const 15)
      (i32.const 5))
  )
  (func (;1;) (type 1) (param $from i32) (param $to i32) (param $expected i32) (result i32)
    (loop $cont
      (if ;; label = @2
        (i32.eq
          (local.get $from)
          (local.get $to))
        (then
          (return
            (i32.const -1))))
      (if ;; label = @2
        (i32.eq
          (i32.load8_u
            (local.get $from))
          (local.get $expected))
        (then
          (local.set $from
            (i32.add
              (local.get $from)
              (i32.const 1)))
          (br $cont))))
    (return
      (local.get $from))
  )
)
