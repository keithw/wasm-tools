(module
  (type $sig (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (result i64)))
  (type (;3;) (func (result f32)))
  (type (;4;) (func (result f64)))
  (type (;5;) (func (param i32) (result i32)))
  (type (;6;) (func (param i64) (result i64)))
  (type (;7;) (func (param f32) (result f32)))
  (type (;8;) (func (param f64) (result f64)))
  (type (;9;) (func (param i64 f32 f64 i32 i32)))
  (type (;10;) (func (param i64 f32 f64 i32 i32) (result i64)))
  (type (;11;) (func (param i64 f32 f64 i32 i32) (result f64)))
  (type (;12;) (func))
  (type (;13;) (func (param i32)))
  (type (;14;) (func (param i32 i32) (result i32)))
  (type (;15;) (func (param i64) (result i32)))
  (table (;0;) 1 1 funcref)
  (memory (;0;) 1)
  (global $g (;0;) (mut i32) (i32.const 0))
  (export "type-local-i32" (func 0))
  (export "type-local-i64" (func 1))
  (export "type-local-f32" (func 2))
  (export "type-local-f64" (func 3))
  (export "type-param-i32" (func 4))
  (export "type-param-i64" (func 5))
  (export "type-param-f32" (func 6))
  (export "type-param-f64" (func 7))
  (export "type-mixed" (func 8))
  (export "write" (func 9))
  (export "result" (func 10))
  (export "as-block-first" (func 12))
  (export "as-block-mid" (func 13))
  (export "as-block-last" (func 14))
  (export "as-loop-first" (func 15))
  (export "as-loop-mid" (func 16))
  (export "as-loop-last" (func 17))
  (export "as-br-value" (func 18))
  (export "as-br_if-cond" (func 19))
  (export "as-br_if-value" (func 20))
  (export "as-br_if-value-cond" (func 21))
  (export "as-br_table-index" (func 22))
  (export "as-br_table-value" (func 23))
  (export "as-br_table-value-index" (func 24))
  (export "as-return-value" (func 25))
  (export "as-if-cond" (func 26))
  (export "as-if-then" (func 27))
  (export "as-if-else" (func 28))
  (export "as-select-first" (func 29))
  (export "as-select-second" (func 30))
  (export "as-select-cond" (func 31))
  (export "as-call-first" (func 33))
  (export "as-call-mid" (func 34))
  (export "as-call-last" (func 35))
  (export "as-call_indirect-first" (func 36))
  (export "as-call_indirect-mid" (func 37))
  (export "as-call_indirect-last" (func 38))
  (export "as-call_indirect-index" (func 39))
  (export "as-local.set-value" (func 40))
  (export "as-local.tee-value" (func 41))
  (export "as-global.set-value" (func 42))
  (export "as-load-address" (func 43))
  (export "as-loadN-address" (func 44))
  (export "as-store-address" (func 45))
  (export "as-store-value" (func 46))
  (export "as-storeN-address" (func 47))
  (export "as-storeN-value" (func 48))
  (export "as-unary-operand" (func 49))
  (export "as-binary-left" (func 50))
  (export "as-binary-right" (func 51))
  (export "as-test-operand" (func 52))
  (export "as-compare-left" (func 53))
  (export "as-compare-right" (func 54))
  (export "as-convert-operand" (func 55))
  (export "as-memory.grow-size" (func 56))
  (elem (;0;) (table 0) (i32.const 0) func $f)
  (func (;0;) (type 1) (result i32)
    (local i32)
    (local.tee 0
      (i32.const 0))
  )
  (func (;1;) (type 2) (result i64)
    (local i64)
    (local.tee 0
      (i64.const 0))
  )
  (func (;2;) (type 3) (result f32)
    (local f32)
    (local.tee 0
      (f32.const 0x0p+0 (;=0;)))
  )
  (func (;3;) (type 4) (result f64)
    (local f64)
    (local.tee 0
      (f64.const 0x0p+0 (;=0;)))
  )
  (func (;4;) (type 5) (param i32) (result i32)
    (local.tee 0
      (i32.const 10))
  )
  (func (;5;) (type 6) (param i64) (result i64)
    (local.tee 0
      (i64.const 11))
  )
  (func (;6;) (type 7) (param f32) (result f32)
    (local.tee 0
      (f32.const 0x1.633334p+3 (;=11.1;)))
  )
  (func (;7;) (type 8) (param f64) (result f64)
    (local.tee 0
      (f64.const 0x1.8666666666666p+3 (;=12.2;)))
  )
  (func (;8;) (type 9) (param i64 f32 f64 i32 i32)
    (local f32 i64 i64 f64)
    (drop
      (i64.eqz
        (local.tee 0
          (i64.const 0))))
    (drop
      (f32.neg
        (local.tee 1
          (f32.const 0x0p+0 (;=0;)))))
    (drop
      (f64.neg
        (local.tee 2
          (f64.const 0x0p+0 (;=0;)))))
    (drop
      (i32.eqz
        (local.tee 3
          (i32.const 0))))
    (drop
      (i32.eqz
        (local.tee 4
          (i32.const 0))))
    (drop
      (f32.neg
        (local.tee 5
          (f32.const 0x0p+0 (;=0;)))))
    (drop
      (i64.eqz
        (local.tee 6
          (i64.const 0))))
    (drop
      (i64.eqz
        (local.tee 7
          (i64.const 0))))
    (drop
      (f64.neg
        (local.tee 8
          (f64.const 0x0p+0 (;=0;)))))
  )
  (func (;9;) (type 10) (param i64 f32 f64 i32 i32) (result i64)
    (local f32 i64 i64 f64)
    (drop
      (local.tee 1
        (f32.const -0x1.333334p-2 (;=-0.3;))))
    (drop
      (local.tee 3
        (i32.const 40)))
    (drop
      (local.tee 4
        (i32.const -7)))
    (drop
      (local.tee 5
        (f32.const 0x1.6p+2 (;=5.5;))))
    (drop
      (local.tee 6
        (i64.const 6)))
    (drop
      (local.tee 8
        (f64.const 0x1p+3 (;=8;))))
    (i64.trunc_f64_s
      (f64.add
        (f64.convert_i64_u
          (local.get 0))
        (f64.add
          (f64.promote_f32
            (local.get 1))
          (f64.add
            (local.get 2)
            (f64.add
              (f64.convert_i32_u
                (local.get 3))
              (f64.add
                (f64.convert_i32_s
                  (local.get 4))
                (f64.add
                  (f64.promote_f32
                    (local.get 5))
                  (f64.add
                    (f64.convert_i64_u
                      (local.get 6))
                    (f64.add
                      (f64.convert_i64_u
                        (local.get 7))
                      (local.get 8))))))))))
  )
  (func (;10;) (type 11) (param i64 f32 f64 i32 i32) (result f64)
    (local f32 i64 i64 f64)
    (f64.add
      (f64.convert_i64_u
        (local.tee 0
          (i64.const 1)))
      (f64.add
        (f64.promote_f32
          (local.tee 1
            (f32.const 0x1p+1 (;=2;))))
        (f64.add
          (local.tee 2
            (f64.const 0x1.a666666666666p+1 (;=3.3;)))
          (f64.add
            (f64.convert_i32_u
              (local.tee 3
                (i32.const 4)))
            (f64.add
              (f64.convert_i32_s
                (local.tee 4
                  (i32.const 5)))
              (f64.add
                (f64.promote_f32
                  (local.tee 5
                    (f32.const 0x1.6p+2 (;=5.5;))))
                (f64.add
                  (f64.convert_i64_u
                    (local.tee 6
                      (i64.const 6)))
                  (f64.add
                    (f64.convert_i64_u
                      (local.tee 7
                        (i64.const 0)))
                    (local.tee 8
                      (f64.const 0x1p+3 (;=8;)))))))))))
  )
  (func $dummy (;11;) (type 12))
  (func (;12;) (type 5) (param i32) (result i32)
    (block (result i32) ;; label = @1
      (local.tee 0
        (i32.const 1))
      (call $dummy))
  )
  (func (;13;) (type 5) (param i32) (result i32)
    (block (result i32) ;; label = @1
      (call $dummy)
      (local.tee 0
        (i32.const 1))
      (call $dummy))
  )
  (func (;14;) (type 5) (param i32) (result i32)
    (block (result i32) ;; label = @1
      (call $dummy)
      (call $dummy)
      (local.tee 0
        (i32.const 1)))
  )
  (func (;15;) (type 5) (param i32) (result i32)
    (loop (result i32) ;; label = @1
      (local.tee 0
        (i32.const 3))
      (call $dummy))
  )
  (func (;16;) (type 5) (param i32) (result i32)
    (loop (result i32) ;; label = @1
      (call $dummy)
      (local.tee 0
        (i32.const 4))
      (call $dummy))
  )
  (func (;17;) (type 5) (param i32) (result i32)
    (loop (result i32) ;; label = @1
      (call $dummy)
      (call $dummy)
      (local.tee 0
        (i32.const 5)))
  )
  (func (;18;) (type 5) (param i32) (result i32)
    (block (result i32) ;; label = @1
      (br 0 (;@1;)
        (local.tee 0
          (i32.const 9))))
  )
  (func (;19;) (type 13) (param i32)
    (block ;; label = @1
      (br_if 0 (;@1;)
        (local.tee 0
          (i32.const 1))))
  )
  (func (;20;) (type 5) (param i32) (result i32)
    (block (result i32) ;; label = @1
      (drop
        (br_if 0 (;@1;)
          (local.tee 0
            (i32.const 8))
          (i32.const 1)))
      (i32.const 7))
  )
  (func (;21;) (type 5) (param i32) (result i32)
    (block (result i32) ;; label = @1
      (drop
        (br_if 0 (;@1;)
          (i32.const 6)
          (local.tee 0
            (i32.const 9))))
      (i32.const 7))
  )
  (func (;22;) (type 13) (param i32)
    (block ;; label = @1
      (br_table 0 (;@1;) 0 (;@1;) 0 (;@1;)
        (local.tee 0
          (i32.const 0))))
  )
  (func (;23;) (type 5) (param i32) (result i32)
    (block (result i32) ;; label = @1
      (br_table 0 (;@1;) 0 (;@1;) 0 (;@1;)
        (local.tee 0
          (i32.const 10))
        (i32.const 1))
      (i32.const 7))
  )
  (func (;24;) (type 5) (param i32) (result i32)
    (block (result i32) ;; label = @1
      (br_table 0 (;@1;) 0 (;@1;)
        (i32.const 6)
        (local.tee 0
          (i32.const 11)))
      (i32.const 7))
  )
  (func (;25;) (type 5) (param i32) (result i32)
    (return
      (local.tee 0
        (i32.const 7)))
  )
  (func (;26;) (type 5) (param i32) (result i32)
    (if (result i32) ;; label = @1
      (local.tee 0
        (i32.const 2))
      (then
        (i32.const 0))
      (else
        (i32.const 1)))
  )
  (func (;27;) (type 5) (param i32) (result i32)
    (if (result i32) ;; label = @1
      (local.get 0)
      (then
        (local.tee 0
          (i32.const 3)))
      (else
        (local.get 0)))
  )
  (func (;28;) (type 5) (param i32) (result i32)
    (if (result i32) ;; label = @1
      (local.get 0)
      (then
        (local.get 0))
      (else
        (local.tee 0
          (i32.const 4))))
  )
  (func (;29;) (type 14) (param i32 i32) (result i32)
    (select
      (local.tee 0
        (i32.const 5))
      (local.get 0)
      (local.get 1))
  )
  (func (;30;) (type 14) (param i32 i32) (result i32)
    (select
      (local.get 0)
      (local.tee 0
        (i32.const 6))
      (local.get 1))
  )
  (func (;31;) (type 5) (param i32) (result i32)
    (select
      (i32.const 0)
      (i32.const 1)
      (local.tee 0
        (i32.const 7)))
  )
  (func $f (;32;) (type $sig) (param i32 i32 i32) (result i32)
    (i32.const -1)
  )
  (func (;33;) (type 5) (param i32) (result i32)
    (call $f
      (local.tee 0
        (i32.const 12))
      (i32.const 2)
      (i32.const 3))
  )
  (func (;34;) (type 5) (param i32) (result i32)
    (call $f
      (i32.const 1)
      (local.tee 0
        (i32.const 13))
      (i32.const 3))
  )
  (func (;35;) (type 5) (param i32) (result i32)
    (call $f
      (i32.const 1)
      (i32.const 2)
      (local.tee 0
        (i32.const 14)))
  )
  (func (;36;) (type 5) (param i32) (result i32)
    (call_indirect (type $sig)
      (local.tee 0
        (i32.const 1))
      (i32.const 2)
      (i32.const 3)
      (i32.const 0))
  )
  (func (;37;) (type 5) (param i32) (result i32)
    (call_indirect (type $sig)
      (i32.const 1)
      (local.tee 0
        (i32.const 2))
      (i32.const 3)
      (i32.const 0))
  )
  (func (;38;) (type 5) (param i32) (result i32)
    (call_indirect (type $sig)
      (i32.const 1)
      (i32.const 2)
      (local.tee 0
        (i32.const 3))
      (i32.const 0))
  )
  (func (;39;) (type 5) (param i32) (result i32)
    (call_indirect (type $sig)
      (i32.const 1)
      (i32.const 2)
      (i32.const 3)
      (local.tee 0
        (i32.const 0)))
  )
  (func (;40;) (type 12)
    (local i32)
    (local.set 0
      (local.tee 0
        (i32.const 1)))
  )
  (func (;41;) (type 5) (param i32) (result i32)
    (local.tee 0
      (local.tee 0
        (i32.const 1)))
  )
  (func (;42;) (type 12)
    (local i32)
    (global.set $g
      (local.tee 0
        (i32.const 1)))
  )
  (func (;43;) (type 5) (param i32) (result i32)
    (i32.load
      (local.tee 0
        (i32.const 1)))
  )
  (func (;44;) (type 5) (param i32) (result i32)
    (i32.load8_s
      (local.tee 0
        (i32.const 3)))
  )
  (func (;45;) (type 13) (param i32)
    (i32.store
      (local.tee 0
        (i32.const 30))
      (i32.const 7))
  )
  (func (;46;) (type 13) (param i32)
    (i32.store
      (i32.const 2)
      (local.tee 0
        (i32.const 1)))
  )
  (func (;47;) (type 13) (param i32)
    (i32.store8
      (local.tee 0
        (i32.const 1))
      (i32.const 7))
  )
  (func (;48;) (type 13) (param i32)
    (i32.store16
      (i32.const 2)
      (local.tee 0
        (i32.const 1)))
  )
  (func (;49;) (type 7) (param f32) (result f32)
    (f32.neg
      (local.tee 0
        (f32.const nan:0xf1e2 (;=NaN;))))
  )
  (func (;50;) (type 5) (param i32) (result i32)
    (i32.add
      (local.tee 0
        (i32.const 3))
      (i32.const 10))
  )
  (func (;51;) (type 5) (param i32) (result i32)
    (i32.sub
      (i32.const 10)
      (local.tee 0
        (i32.const 4)))
  )
  (func (;52;) (type 5) (param i32) (result i32)
    (i32.eqz
      (local.tee 0
        (i32.const 0)))
  )
  (func (;53;) (type 5) (param i32) (result i32)
    (i32.le_s
      (local.tee 0
        (i32.const 43))
      (i32.const 10))
  )
  (func (;54;) (type 5) (param i32) (result i32)
    (i32.ne
      (i32.const 10)
      (local.tee 0
        (i32.const 42)))
  )
  (func (;55;) (type 15) (param i64) (result i32)
    (i32.wrap_i64
      (local.tee 0
        (i64.const 41)))
  )
  (func (;56;) (type 5) (param i32) (result i32)
    (memory.grow
      (local.tee 0
        (i32.const 40)))
  )
)
