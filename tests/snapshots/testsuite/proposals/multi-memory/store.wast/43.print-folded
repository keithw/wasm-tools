(module
  (type (;0;) (func))
  (memory (;0;) 1)
  (export "as-block-value" (func 0))
  (export "as-loop-value" (func 1))
  (export "as-br-value" (func 2))
  (export "as-br_if-value" (func 3))
  (export "as-br_if-value-cond" (func 4))
  (export "as-br_table-value" (func 5))
  (export "as-return-value" (func 6))
  (export "as-if-then" (func 7))
  (export "as-if-else" (func 8))
  (func (;0;) (type 0)
    (block ;; label = @1
      (i32.store
        (i32.const 0)
        (i32.const 1)))
  )
  (func (;1;) (type 0)
    (loop ;; label = @1
      (i32.store
        (i32.const 0)
        (i32.const 1)))
  )
  (func (;2;) (type 0)
    (block ;; label = @1
      (i32.store
        (i32.const 0)
        (i32.const 1))
      (br 0 (;@1;)))
  )
  (func (;3;) (type 0)
    (block ;; label = @1
      (i32.store
        (i32.const 0)
        (i32.const 1))
      (br_if 0 (;@1;)
        (i32.const 1)))
  )
  (func (;4;) (type 0)
    (block ;; label = @1
      (br_if 0 (;@1;)
        (i32.const 6)
        (i32.store
          (i32.const 0)
          (i32.const 1))))
  )
  (func (;5;) (type 0)
    (block ;; label = @1
      (i32.store
        (i32.const 0)
        (i32.const 1))
      (br_table 0 (;@1;)
        (i32.const 1)))
  )
  (func (;6;) (type 0)
    (i32.store
      (i32.const 0)
      (i32.const 1))
    (return)
  )
  (func (;7;) (type 0)
    (if ;; label = @1
      (i32.const 1)
      (then
        (i32.store
          (i32.const 0)
          (i32.const 1))))
  )
  (func (;8;) (type 0)
    (if ;; label = @1
      (i32.const 0)
      (then)
      (else
        (i32.store
          (i32.const 0)
          (i32.const 1))))
  )
)
