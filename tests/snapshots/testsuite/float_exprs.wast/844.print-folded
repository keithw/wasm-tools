(module
  (type (;0;) (func (result f32)))
  (type (;1;) (func (result f64)))
  (export "f32.epsilon" (func 0))
  (export "f64.epsilon" (func 1))
  (func (;0;) (type 0) (result f32)
    (local $x f32) (local $result f32)
    (local.set $x
      (f32.const 0x1p+0 (;=1;)))
    (loop $loop
      (br_if $loop
        (f32.gt
          (f32.add
            (local.tee $x
              (f32.mul
                (local.tee $result
                  (local.get $x))
                (f32.const 0x1p-1 (;=0.5;))))
            (f32.const 0x1p+0 (;=1;)))
          (f32.const 0x1p+0 (;=1;)))))
    (local.get $result)
  )
  (func (;1;) (type 1) (result f64)
    (local $x f64) (local $result f64)
    (local.set $x
      (f64.const 0x1p+0 (;=1;)))
    (loop $loop
      (br_if $loop
        (f64.gt
          (f64.add
            (local.tee $x
              (f64.mul
                (local.tee $result
                  (local.get $x))
                (f64.const 0x1p-1 (;=0.5;))))
            (f64.const 0x1p+0 (;=1;)))
          (f64.const 0x1p+0 (;=1;)))))
    (local.get $result)
  )
)
