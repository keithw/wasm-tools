(module
  (type (;0;) (func (param i32 f32)))
  (type (;1;) (func (param i32) (result f32)))
  (memory (;0;) 1 1)
  (export "init" (func 0))
  (export "run" (func 1))
  (export "check" (func 2))
  (func (;0;) (type 0) (param $i i32) (param $x f32)
    (f32.store
      (local.get $i)
      (local.get $x))
  )
  (func (;1;) (type 0) (param $n i32) (param $z f32)
    (local $i i32)
    (block $exit
      (loop $cont
        (f32.store
          (local.get $i)
          (f32.div
            (f32.load
              (local.get $i))
            (local.get $z)))
        (local.set $i
          (i32.add
            (local.get $i)
            (i32.const 4)))
        (br_if $cont
          (i32.lt_u
            (local.get $i)
            (local.get $n)))))
  )
  (func (;2;) (type 1) (param $i i32) (result f32)
    (f32.load
      (local.get $i))
  )
)
