(module
  (type (;0;) (func (param f32 f32) (result i32)))
  (type (;1;) (func (param f64 f64) (result i32)))
  (export "f32.not_lt" (func 0))
  (export "f32.not_le" (func 1))
  (export "f32.not_gt" (func 2))
  (export "f32.not_ge" (func 3))
  (export "f64.not_lt" (func 4))
  (export "f64.not_le" (func 5))
  (export "f64.not_gt" (func 6))
  (export "f64.not_ge" (func 7))
  (func (;0;) (type 0) (param $x f32) (param $y f32) (result i32)
    (i32.eqz
      (f32.lt
        (local.get $x)
        (local.get $y)))
  )
  (func (;1;) (type 0) (param $x f32) (param $y f32) (result i32)
    (i32.eqz
      (f32.le
        (local.get $x)
        (local.get $y)))
  )
  (func (;2;) (type 0) (param $x f32) (param $y f32) (result i32)
    (i32.eqz
      (f32.gt
        (local.get $x)
        (local.get $y)))
  )
  (func (;3;) (type 0) (param $x f32) (param $y f32) (result i32)
    (i32.eqz
      (f32.ge
        (local.get $x)
        (local.get $y)))
  )
  (func (;4;) (type 1) (param $x f64) (param $y f64) (result i32)
    (i32.eqz
      (f64.lt
        (local.get $x)
        (local.get $y)))
  )
  (func (;5;) (type 1) (param $x f64) (param $y f64) (result i32)
    (i32.eqz
      (f64.le
        (local.get $x)
        (local.get $y)))
  )
  (func (;6;) (type 1) (param $x f64) (param $y f64) (result i32)
    (i32.eqz
      (f64.gt
        (local.get $x)
        (local.get $y)))
  )
  (func (;7;) (type 1) (param $x f64) (param $y f64) (result i32)
    (i32.eqz
      (f64.ge
        (local.get $x)
        (local.get $y)))
  )
)
