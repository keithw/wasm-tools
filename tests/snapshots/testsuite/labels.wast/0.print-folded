(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32) (result i32)))
  (export "block" (func 0))
  (export "loop1" (func 1))
  (export "loop2" (func 2))
  (export "loop3" (func 3))
  (export "loop4" (func 4))
  (export "loop5" (func 5))
  (export "loop6" (func 6))
  (export "if" (func 7))
  (export "if2" (func 8))
  (export "switch" (func 9))
  (export "return" (func 10))
  (export "br_if0" (func 11))
  (export "br_if1" (func 12))
  (export "br_if2" (func 13))
  (export "br_if3" (func 14))
  (export "br" (func 15))
  (export "shadowing" (func 16))
  (export "redefinition" (func 17))
  (func (;0;) (type 0) (result i32)
    (block $exit (result i32)
      (br $exit
        (i32.const 1))
      (i32.const 0))
  )
  (func (;1;) (type 0) (result i32)
    (local $i i32)
    (local.set $i
      (i32.const 0))
    (block $exit (result i32)
      (loop $cont (result i32)
        (local.set $i
          (i32.add
            (local.get $i)
            (i32.const 1)))
        (if ;; label = @3
          (i32.eq
            (local.get $i)
            (i32.const 5))
          (then
            (br $exit
              (local.get $i))))
        (br $cont)))
  )
  (func (;2;) (type 0) (result i32)
    (local $i i32)
    (local.set $i
      (i32.const 0))
    (block $exit (result i32)
      (loop $cont (result i32)
        (local.set $i
          (i32.add
            (local.get $i)
            (i32.const 1)))
        (if ;; label = @3
          (i32.eq
            (local.get $i)
            (i32.const 5))
          (then
            (br $cont)))
        (if ;; label = @3
          (i32.eq
            (local.get $i)
            (i32.const 8))
          (then
            (br $exit
              (local.get $i))))
        (local.set $i
          (i32.add
            (local.get $i)
            (i32.const 1)))
        (br $cont)))
  )
  (func (;3;) (type 0) (result i32)
    (local $i i32)
    (local.set $i
      (i32.const 0))
    (block $exit (result i32)
      (loop $cont (result i32)
        (local.set $i
          (i32.add
            (local.get $i)
            (i32.const 1)))
        (if ;; label = @3
          (i32.eq
            (local.get $i)
            (i32.const 5))
          (then
            (br $exit
              (local.get $i))))
        (local.get $i)))
  )
  (func (;4;) (type 1) (param $max i32) (result i32)
    (local $i i32)
    (local.set $i
      (i32.const 1))
    (block $exit (result i32)
      (loop $cont (result i32)
        (local.set $i
          (i32.add
            (local.get $i)
            (local.get $i)))
        (if ;; label = @3
          (i32.gt_u
            (local.get $i)
            (local.get $max))
          (then
            (br $exit
              (local.get $i))))
        (br $cont)))
  )
  (func (;5;) (type 0) (result i32)
    (i32.add
      (loop $l (result i32)
        (i32.const 1))
      (i32.const 1))
  )
  (func (;6;) (type 0) (result i32)
    (loop (result i32) ;; label = @1
      (br_if 0 (;@1;)
        (i32.const 0))
      (i32.const 3))
  )
  (func (;7;) (type 0) (result i32)
    (local $i i32)
    (local.set $i
      (i32.const 0))
    (block ;; label = @1
      (if $l
        (i32.const 1)
        (then
          (br $l)
          (local.set $i
            (i32.const 666))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1)))
      (if $l
        (i32.const 1)
        (then
          (br $l)
          (local.set $i
            (i32.const 666)))
        (else
          (local.set $i
            (i32.const 888))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1)))
      (if $l
        (i32.const 1)
        (then
          (br $l)
          (local.set $i
            (i32.const 666)))
        (else
          (local.set $i
            (i32.const 888))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1)))
      (if $l
        (i32.const 0)
        (then
          (local.set $i
            (i32.const 888)))
        (else
          (br $l)
          (local.set $i
            (i32.const 666))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1)))
      (if $l
        (i32.const 0)
        (then
          (local.set $i
            (i32.const 888)))
        (else
          (br $l)
          (local.set $i
            (i32.const 666))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1))))
    (local.get $i)
  )
  (func (;8;) (type 0) (result i32)
    (local $i i32)
    (local.set $i
      (i32.const 0))
    (block ;; label = @1
      (if ;; label = @2
        (i32.const 1)
        (then
          (br 0 (;@2;))
          (local.set $i
            (i32.const 666))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1)))
      (if ;; label = @2
        (i32.const 1)
        (then
          (br 0 (;@2;))
          (local.set $i
            (i32.const 666)))
        (else
          (local.set $i
            (i32.const 888))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1)))
      (if ;; label = @2
        (i32.const 1)
        (then
          (br 0 (;@2;))
          (local.set $i
            (i32.const 666)))
        (else
          (local.set $i
            (i32.const 888))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1)))
      (if ;; label = @2
        (i32.const 0)
        (then
          (local.set $i
            (i32.const 888)))
        (else
          (br 0 (;@2;))
          (local.set $i
            (i32.const 666))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1)))
      (if ;; label = @2
        (i32.const 0)
        (then
          (local.set $i
            (i32.const 888)))
        (else
          (br 0 (;@2;))
          (local.set $i
            (i32.const 666))))
      (local.set $i
        (i32.add
          (local.get $i)
          (i32.const 1))))
    (local.get $i)
  )
  (func (;9;) (type 1) (param i32) (result i32)
    (block $ret (result i32)
      (i32.mul
        (i32.const 10)
        (block $exit (result i32)
          (block $0
            (block $default
              (block $3
                (block $2
                  (block $1
                    (br_table $0 $1 $2 $3 $default
                      (local.get 0))))
                (br $exit
                  (i32.const 2)))
              (br $ret
                (i32.const 3))))
          (i32.const 5))))
  )
  (func (;10;) (type 1) (param i32) (result i32)
    (block $default
      (block $1
        (block $0
          (br_table $0 $1
            (local.get 0))
          (br $default))
        (return
          (i32.const 0))))
    (i32.const 2)
  )
  (func (;11;) (type 0) (result i32)
    (local $i i32)
    (local.set $i
      (i32.const 0))
    (block $outer (result i32)
      (block $inner
        (br_if $inner
          (i32.const 0))
        (local.set $i
          (i32.or
            (local.get $i)
            (i32.const 1)))
        (br_if $inner
          (i32.const 1))
        (local.set $i
          (i32.or
            (local.get $i)
            (i32.const 2))))
      (drop
        (br_if $outer
          (block (result i32) ;; label = @2
            (local.set $i
              (i32.or
                (local.get $i)
                (i32.const 4)))
            (local.get $i))
          (i32.const 0)))
      (local.set $i
        (i32.or
          (local.get $i)
          (i32.const 8)))
      (drop
        (br_if $outer
          (block (result i32) ;; label = @2
            (local.set $i
              (i32.or
                (local.get $i)
                (i32.const 16)))
            (local.get $i))
          (i32.const 1)))
      (local.set $i
        (i32.or
          (local.get $i)
          (i32.const 32)))
      (local.get $i))
  )
  (func (;12;) (type 0) (result i32)
    (block $l0 (result i32)
      (drop
        (br_if $l0
          (block $l1 (result i32)
            (br $l1
              (i32.const 1)))
          (i32.const 1)))
      (i32.const 0))
  )
  (func (;13;) (type 0) (result i32)
    (block $l0 (result i32)
      (if ;; label = @2
        (i32.const 1)
        (then
          (drop
            (br_if $l0
              (block $l1 (result i32)
                (br $l1
                  (i32.const 1)))
              (i32.const 1)))))
      (i32.const 0))
  )
  (func (;14;) (type 0) (result i32)
    (local $i1 i32)
    (drop
      (i32.add
        (block $l0 (result i32)
          (drop
            (br_if $l0
              (block (result i32) ;; label = @2
                (local.set $i1
                  (i32.const 1))
                (local.get $i1))
              (block (result i32) ;; label = @2
                (local.set $i1
                  (i32.const 2))
                (local.get $i1))))
          (i32.const 0))
        (i32.const 0)))
    (local.get $i1)
  )
  (func (;15;) (type 0) (result i32)
    (block $l0 (result i32)
      (if ;; label = @2
        (i32.const 1)
        (then
          (br $l0
            (block $l1 (result i32)
              (br $l1
                (i32.const 1)))))
        (else
          (block ;; label = @3
            (drop
              (block $l1 (result i32)
                (br $l1
                  (i32.const 1)))))))
      (i32.const 1))
  )
  (func (;16;) (type 0) (result i32)
    (block $l1 (result i32)
      (br $l1
        (i32.const 1))
      (i32.const 2)
      (i32.xor))
  )
  (func (;17;) (type 0) (result i32)
    (block $l1 (result i32)
      (i32.add
        (block $l1 (result i32)
          (i32.const 2))
        (block $l1 (result i32)
          (br $l1
            (i32.const 3)))))
  )
)
