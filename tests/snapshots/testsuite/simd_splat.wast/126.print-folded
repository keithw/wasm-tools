(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param f32) (result f32)))
  (type (;2;) (func (param i32 i32) (result v128)))
  (type (;3;) (func (param i64) (result i64)))
  (type (;4;) (func (param f64) (result f64)))
  (type (;5;) (func (param i32 i32 i32) (result v128)))
  (type (;6;) (func (param i32 i32 i32 i32) (result v128)))
  (type (;7;) (func (param i64 i64 i64 i64) (result v128)))
  (type (;8;) (func (param f64 f64 f64 f64) (result v128)))
  (type (;9;) (func (param i64) (result i32)))
  (type (;10;) (func (param i64 i64) (result v128)))
  (type (;11;) (func (param f32 f32) (result v128)))
  (type (;12;) (func (param f64 f64) (result v128)))
  (type (;13;) (func (param f32) (result v128)))
  (type (;14;) (func (param i32) (result v128)))
  (export "as-i8x16_extract_lane_s-operand-first" (func 0))
  (export "as-i8x16_extract_lane_s-operand-last" (func 1))
  (export "as-i16x8_extract_lane_s-operand-first" (func 2))
  (export "as-i16x8_extract_lane_s-operand-last" (func 3))
  (export "as-i32x4_extract_lane_s-operand-first" (func 4))
  (export "as-i32x4_extract_lane_s-operand-last" (func 5))
  (export "as-f32x4_extract_lane_s-operand-first" (func 6))
  (export "as-f32x4_extract_lane_s-operand-last" (func 7))
  (export "as-v8x16_swizzle-operands" (func 8))
  (export "as-i64x2_extract_lane-operand-first" (func 9))
  (export "as-i64x2_extract_lane-operand-last" (func 10))
  (export "as-f64x2_extract_lane-operand-first" (func 11))
  (export "as-f64x2_extract_lane-operand-last" (func 12))
  (export "as-i8x16_add_sub-operands" (func 13))
  (export "as-i16x8_add_sub_mul-operands" (func 14))
  (export "as-i32x4_add_sub_mul-operands" (func 15))
  (export "as-i64x2_add_sub_mul-operands" (func 16))
  (export "as-f64x2_add_sub_mul-operands" (func 17))
  (export "as-i8x16_add_sat_s-operands" (func 18))
  (export "as-i16x8_add_sat_s-operands" (func 19))
  (export "as-i8x16_sub_sat_u-operands" (func 20))
  (export "as-i16x8_sub_sat_u-operands" (func 21))
  (export "as-i8x16_shr_s-operand" (func 22))
  (export "as-i16x8_shr_s-operand" (func 23))
  (export "as-i32x4_shr_s-operand" (func 24))
  (export "as-v128_and-operands" (func 25))
  (export "as-v128_or-operands" (func 26))
  (export "as-v128_xor-operands" (func 27))
  (export "as-i8x16_all_true-operand" (func 28))
  (export "as-i16x8_all_true-operand" (func 29))
  (export "as-i32x4_all_true-operand1" (func 30))
  (export "as-i32x4_all_true-operand2" (func 31))
  (export "as-i8x16_eq-operands" (func 32))
  (export "as-i16x8_eq-operands" (func 33))
  (export "as-i32x4_eq-operands1" (func 34))
  (export "as-i32x4_eq-operands2" (func 35))
  (export "as-f32x4_eq-operands" (func 36))
  (export "as-f64x2_eq-operands" (func 37))
  (export "as-f32x4_abs-operand" (func 38))
  (export "as-f32x4_min-operands" (func 39))
  (export "as-f32x4_div-operands" (func 40))
  (export "as-f32x4_convert_s_i32x4-operand" (func 41))
  (export "as-i32x4_trunc_s_f32x4_sat-operand" (func 42))
  (func (;0;) (type 0) (param i32) (result i32)
    (i8x16.extract_lane_s 0
      (i8x16.splat
        (local.get 0)))
  )
  (func (;1;) (type 0) (param i32) (result i32)
    (i8x16.extract_lane_s 15
      (i8x16.splat
        (local.get 0)))
  )
  (func (;2;) (type 0) (param i32) (result i32)
    (i16x8.extract_lane_s 0
      (i16x8.splat
        (local.get 0)))
  )
  (func (;3;) (type 0) (param i32) (result i32)
    (i16x8.extract_lane_s 7
      (i16x8.splat
        (local.get 0)))
  )
  (func (;4;) (type 0) (param i32) (result i32)
    (i32x4.extract_lane 0
      (i32x4.splat
        (local.get 0)))
  )
  (func (;5;) (type 0) (param i32) (result i32)
    (i32x4.extract_lane 3
      (i32x4.splat
        (local.get 0)))
  )
  (func (;6;) (type 1) (param f32) (result f32)
    (f32x4.extract_lane 0
      (f32x4.splat
        (local.get 0)))
  )
  (func (;7;) (type 1) (param f32) (result f32)
    (f32x4.extract_lane 3
      (f32x4.splat
        (local.get 0)))
  )
  (func (;8;) (type 2) (param i32 i32) (result v128)
    (i8x16.swizzle
      (i8x16.splat
        (local.get 0))
      (i8x16.splat
        (local.get 1)))
  )
  (func (;9;) (type 3) (param i64) (result i64)
    (i64x2.extract_lane 0
      (i64x2.splat
        (local.get 0)))
  )
  (func (;10;) (type 3) (param i64) (result i64)
    (i64x2.extract_lane 1
      (i64x2.splat
        (local.get 0)))
  )
  (func (;11;) (type 4) (param f64) (result f64)
    (f64x2.extract_lane 0
      (f64x2.splat
        (local.get 0)))
  )
  (func (;12;) (type 4) (param f64) (result f64)
    (f64x2.extract_lane 1
      (f64x2.splat
        (local.get 0)))
  )
  (func (;13;) (type 5) (param i32 i32 i32) (result v128)
    (i8x16.add
      (i8x16.splat
        (local.get 0))
      (i8x16.sub
        (i8x16.splat
          (local.get 1))
        (i8x16.splat
          (local.get 2))))
  )
  (func (;14;) (type 6) (param i32 i32 i32 i32) (result v128)
    (i16x8.add
      (i16x8.splat
        (local.get 0))
      (i16x8.sub
        (i16x8.splat
          (local.get 1))
        (i16x8.mul
          (i16x8.splat
            (local.get 2))
          (i16x8.splat
            (local.get 3)))))
  )
  (func (;15;) (type 6) (param i32 i32 i32 i32) (result v128)
    (i32x4.add
      (i32x4.splat
        (local.get 0))
      (i32x4.sub
        (i32x4.splat
          (local.get 1))
        (i32x4.mul
          (i32x4.splat
            (local.get 2))
          (i32x4.splat
            (local.get 3)))))
  )
  (func (;16;) (type 7) (param i64 i64 i64 i64) (result v128)
    (i64x2.add
      (i64x2.splat
        (local.get 0))
      (i64x2.sub
        (i64x2.splat
          (local.get 1))
        (i64x2.mul
          (i64x2.splat
            (local.get 2))
          (i64x2.splat
            (local.get 3)))))
  )
  (func (;17;) (type 8) (param f64 f64 f64 f64) (result v128)
    (f64x2.add
      (f64x2.splat
        (local.get 0))
      (f64x2.sub
        (f64x2.splat
          (local.get 1))
        (f64x2.mul
          (f64x2.splat
            (local.get 2))
          (f64x2.splat
            (local.get 3)))))
  )
  (func (;18;) (type 2) (param i32 i32) (result v128)
    (i8x16.add_sat_s
      (i8x16.splat
        (local.get 0))
      (i8x16.splat
        (local.get 1)))
  )
  (func (;19;) (type 2) (param i32 i32) (result v128)
    (i16x8.add_sat_s
      (i16x8.splat
        (local.get 0))
      (i16x8.splat
        (local.get 1)))
  )
  (func (;20;) (type 2) (param i32 i32) (result v128)
    (i8x16.sub_sat_u
      (i8x16.splat
        (local.get 0))
      (i8x16.splat
        (local.get 1)))
  )
  (func (;21;) (type 2) (param i32 i32) (result v128)
    (i16x8.sub_sat_u
      (i16x8.splat
        (local.get 0))
      (i16x8.splat
        (local.get 1)))
  )
  (func (;22;) (type 2) (param i32 i32) (result v128)
    (i8x16.shr_s
      (i8x16.splat
        (local.get 0))
      (local.get 1))
  )
  (func (;23;) (type 2) (param i32 i32) (result v128)
    (i16x8.shr_s
      (i16x8.splat
        (local.get 0))
      (local.get 1))
  )
  (func (;24;) (type 2) (param i32 i32) (result v128)
    (i32x4.shr_s
      (i32x4.splat
        (local.get 0))
      (local.get 1))
  )
  (func (;25;) (type 2) (param i32 i32) (result v128)
    (v128.and
      (i8x16.splat
        (local.get 0))
      (i8x16.splat
        (local.get 1)))
  )
  (func (;26;) (type 2) (param i32 i32) (result v128)
    (v128.or
      (i16x8.splat
        (local.get 0))
      (i16x8.splat
        (local.get 1)))
  )
  (func (;27;) (type 2) (param i32 i32) (result v128)
    (v128.xor
      (i32x4.splat
        (local.get 0))
      (i32x4.splat
        (local.get 1)))
  )
  (func (;28;) (type 0) (param i32) (result i32)
    (i8x16.all_true
      (i8x16.splat
        (local.get 0)))
  )
  (func (;29;) (type 0) (param i32) (result i32)
    (i16x8.all_true
      (i16x8.splat
        (local.get 0)))
  )
  (func (;30;) (type 0) (param i32) (result i32)
    (i32x4.all_true
      (i32x4.splat
        (local.get 0)))
  )
  (func (;31;) (type 9) (param i64) (result i32)
    (i32x4.all_true
      (i64x2.splat
        (local.get 0)))
  )
  (func (;32;) (type 2) (param i32 i32) (result v128)
    (i8x16.eq
      (i8x16.splat
        (local.get 0))
      (i8x16.splat
        (local.get 1)))
  )
  (func (;33;) (type 2) (param i32 i32) (result v128)
    (i16x8.eq
      (i16x8.splat
        (local.get 0))
      (i16x8.splat
        (local.get 1)))
  )
  (func (;34;) (type 2) (param i32 i32) (result v128)
    (i32x4.eq
      (i32x4.splat
        (local.get 0))
      (i32x4.splat
        (local.get 1)))
  )
  (func (;35;) (type 10) (param i64 i64) (result v128)
    (i32x4.eq
      (i64x2.splat
        (local.get 0))
      (i64x2.splat
        (local.get 1)))
  )
  (func (;36;) (type 11) (param f32 f32) (result v128)
    (f32x4.eq
      (f32x4.splat
        (local.get 0))
      (f32x4.splat
        (local.get 1)))
  )
  (func (;37;) (type 12) (param f64 f64) (result v128)
    (f64x2.eq
      (f64x2.splat
        (local.get 0))
      (f64x2.splat
        (local.get 1)))
  )
  (func (;38;) (type 13) (param f32) (result v128)
    (f32x4.abs
      (f32x4.splat
        (local.get 0)))
  )
  (func (;39;) (type 11) (param f32 f32) (result v128)
    (f32x4.min
      (f32x4.splat
        (local.get 0))
      (f32x4.splat
        (local.get 1)))
  )
  (func (;40;) (type 11) (param f32 f32) (result v128)
    (f32x4.div
      (f32x4.splat
        (local.get 0))
      (f32x4.splat
        (local.get 1)))
  )
  (func (;41;) (type 14) (param i32) (result v128)
    (f32x4.convert_i32x4_s
      (i32x4.splat
        (local.get 0)))
  )
  (func (;42;) (type 13) (param f32) (result v128)
    (i32x4.trunc_sat_f32x4_s
      (f32x4.splat
        (local.get 0)))
  )
)
