(module
  (type (;0;) (func))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (result f32)))
  (type (;3;) (func (param i32) (result i32)))
  (memory (;0;) 1 1)
  (export "zero_everything" (func 0))
  (export "test_store_to_load" (func 1))
  (export "test_redundant_load" (func 2))
  (export "test_dead_store" (func 3))
  (export "malloc" (func $malloc))
  (export "malloc_aliasing" (func 5))
  (func (;0;) (type 0)
    (i32.store
      (i32.const 0)
      (i32.const 0))
    (i32.store
      (i32.const 4)
      (i32.const 0))
    (i32.store
      (i32.const 8)
      (i32.const 0))
    (i32.store
      (i32.const 12)
      (i32.const 0))
  )
  (func (;1;) (type 1) (result i32)
    (i32.store
      (i32.const 8)
      (i32.const 0))
    (f32.store
      (i32.const 5)
      (f32.const -0x0p+0 (;=-0;)))
    (i32.load
      (i32.const 8))
  )
  (func (;2;) (type 1) (result i32)
    (local $t i32) (local $s i32)
    (local.set $t
      (i32.load
        (i32.const 8)))
    (i32.store
      (i32.const 5)
      (i32.const -2147483648))
    (local.set $s
      (i32.load
        (i32.const 8)))
    (i32.add
      (local.get $t)
      (local.get $s))
  )
  (func (;3;) (type 2) (result f32)
    (local $t f32)
    (i32.store
      (i32.const 8)
      (i32.const 589505315))
    (local.set $t
      (f32.load
        (i32.const 11)))
    (i32.store
      (i32.const 8)
      (i32.const 0))
    (local.get $t)
  )
  (func $malloc (;4;) (type 3) (param $size i32) (result i32)
    (i32.const 16)
  )
  (func (;5;) (type 1) (result i32)
    (local $x i32) (local $y i32)
    (local.set $x
      (call $malloc
        (i32.const 4)))
    (local.set $y
      (call $malloc
        (i32.const 4)))
    (i32.store
      (local.get $x)
      (i32.const 42))
    (i32.store
      (local.get $y)
      (i32.const 43))
    (i32.load
      (local.get $x))
  )
)
