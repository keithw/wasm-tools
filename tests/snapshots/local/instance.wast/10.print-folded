(module
  (type (;0;) (func))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (result funcref)))
  (import "I1" "glob" (global $glob1 (;0;) (mut i32)))
  (import "I1" "glob" (global $glob2 (;1;) (mut i32)))
  (import "I1" "tab" (table $tab1 (;0;) 10 funcref))
  (import "I1" "tab" (table $tab2 (;1;) 10 funcref))
  (import "I1" "mem" (memory $mem1 (;0;) 1))
  (import "I1" "mem" (memory $mem2 (;1;) 1))
  (import "I1" "tag" (tag $tag1 (;0;) (type 0)))
  (import "I1" "tag" (tag $tag2 (;1;) (type 0)))
  (export "glob" (func 1))
  (export "tab" (func 2))
  (export "mem" (func 3))
  (export "tag" (func 4))
  (elem (;0;) declare func $f)
  (func $f (;0;) (type 0))
  (func (;1;) (type 1) (result i32)
    (global.set $glob1
      (i32.const 1))
    (global.get $glob2)
  )
  (func (;2;) (type 2) (result funcref)
    (table.set $tab1
      (i32.const 0)
      (ref.func $f))
    (table.get $tab2
      (i32.const 0))
  )
  (func (;3;) (type 1) (result i32)
    (i32.store
      (i32.const 0)
      (i32.const 1))
    (i32.load $mem2
      (i32.const 0))
  )
  (func (;4;) (type 1) (result i32)
    (block $on_tag1
      (block $on_other
        (try_table (catch $tag1 $on_tag1) (catch_all $on_other) ;; label = @3
          (throw $tag2))
        (unreachable))
      (return
        (i32.const 0)))
    (return
      (i32.const 1))
  )
)
