(module
  (type (;0;) (func (param i32 i32)))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (result i32)))
  (type (;3;) (func (param i32)))
  (type (;4;) (func))
  (import "env" "DYNAMICTOP_PTR" (global (;0;) i32))
  (import "env" "tempDoublePtr" (global (;1;) i32))
  (import "env" "ABORT" (global (;2;) i32))
  (import "env" "STACKTOP" (global (;3;) i32))
  (import "env" "STACK_MAX" (global (;4;) i32))
  (import "env" "gb" (global (;5;) i32))
  (import "env" "fb" (global (;6;) i32))
  (import "global" "NaN" (global (;7;) f64))
  (import "global" "Infinity" (global (;8;) f64))
  (import "env" "memory" (memory (;0;) 256 256))
  (import "env" "table" (table (;0;) 0 0 funcref))
  (import "env" "memoryBase" (global (;9;) i32))
  (import "env" "tableBase" (global (;10;) i32))
  (global (;11;) (mut i32) (global.get 0))
  (global (;12;) (mut i32) (global.get 1))
  (global (;13;) (mut i32) (global.get 2))
  (global (;14;) (mut i32) (global.get 3))
  (global (;15;) (mut i32) (global.get 4))
  (global (;16;) (mut i32) (global.get 5))
  (global (;17;) (mut i32) (global.get 6))
  (global (;18;) (mut i32) (i32.const 0))
  (global (;19;) (mut i32) (i32.const 0))
  (global (;20;) (mut i32) (i32.const 0))
  (global (;21;) (mut i32) (i32.const 0))
  (global (;22;) (mut f64) (global.get 7))
  (global (;23;) (mut f64) (global.get 8))
  (global (;24;) (mut i32) (i32.const 0))
  (global (;25;) (mut i32) (i32.const 0))
  (global (;26;) (mut i32) (i32.const 0))
  (global (;27;) (mut i32) (i32.const 0))
  (global (;28;) (mut f64) (f64.const 0x0p+0 (;=0;)))
  (global (;29;) (mut i32) (i32.const 0))
  (global (;30;) (mut i32) (i32.const 0))
  (global (;31;) (mut i32) (i32.const 0))
  (global (;32;) (mut f64) (f64.const 0x0p+0 (;=0;)))
  (global (;33;) (mut i32) (i32.const 0))
  (global (;34;) (mut f64) (f64.const 0x0p+0 (;=0;)))
  (export "setThrew" (func $setThrew))
  (export "runPostSets" (func $runPostSets))
  (export "establishStackSpace" (func $establishStackSpace))
  (export "stackSave" (func $stackSave))
  (export "stackRestore" (func $stackRestore))
  (export "_fib" (func $_fib))
  (export "stackAlloc" (func $stackAlloc))
  (func $stackAlloc (;0;) (type 1) (param i32) (result i32)
    (local i32)
    (block ;; label = @1
      (local.set 1
        (global.get 14))
      (global.set 14
        (i32.add
          (global.get 14)
          (local.get 0)))
      (global.set 14
        (i32.and
          (i32.add
            (global.get 14)
            (i32.const 15))
          (i32.const -16)))
      (return
        (local.get 1))
      (unreachable))
    (unreachable)
  )
  (func $stackSave (;1;) (type 2) (result i32)
    (return
      (global.get 14))
  )
  (func $stackRestore (;2;) (type 3) (param i32)
    (global.set 14
      (local.get 0))
  )
  (func $establishStackSpace (;3;) (type 0) (param i32 i32)
    (block ;; label = @1
      (global.set 14
        (local.get 0))
      (global.set 15
        (local.get 1)))
  )
  (func $setThrew (;4;) (type 0) (param i32 i32)
    (if ;; label = @1
      (i32.eq
        (global.get 18)
        (i32.const 0))
      (then
        (global.set 18
          (local.get 0))
        (global.set 19
          (local.get 1))))
  )
  (func $_fib (;5;) (type 1) (param i32) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)
    (block ;; label = @1
      (local.set 11
        (global.get 14))
      (local.set 6
        (i32.gt_s
          (local.get 0)
          (i32.const 0)))
      (if ;; label = @2
        (local.get 6)
        (then
          (local.set 1
            (i32.const 0))
          (local.set 5
            (i32.const 1))
          (local.set 8
            (i32.const 0)))
        (else
          (local.set 4
            (i32.const 1))
          (return
            (local.get 4))))
      (loop ;; label = @2
        (block ;; label = @3
          (local.set 3
            (i32.add
              (local.get 5)
              (local.get 1)))
          (local.set 9
            (i32.add
              (local.get 8)
              (i32.const 1)))
          (local.set 7
            (i32.eq
              (local.get 9)
              (local.get 0)))
          (if ;; label = @4
            (local.get 7)
            (then
              (local.set 4
                (local.get 3))
              (br 1 (;@3;)))
            (else
              (local.set 2
                (local.get 5))
              (local.set 5
                (local.get 3))
              (local.set 8
                (local.get 9))
              (local.set 1
                (local.get 2))))
          (br 1 (;@2;))))
      (return
        (local.get 4))
      (unreachable))
    (unreachable)
  )
  (func $runPostSets (;6;) (type 4)
    (local i32)
    (nop)
  )
)
