(module
  (type $a (;0;) (array i32))
  (type $b (;1;) (array (mut i32)))
  (type $c (;2;) (array (mut funcref)))
  (type (;3;) (func))
  (type (;4;) (func (param (ref $a) (ref $b))))
  (elem $elem (;0;) func $func)
  (func $func (;0;) (type 3))
  (func (;1;) (type 4) (param (ref $a) (ref $b))
    (drop
      (array.new $a
        (i32.const 1)
        (i32.const 1)))
    (drop
      (array.new_default $a
        (i32.const 1)))
    (drop
      (array.get $a
        (local.get 0)
        (i32.const 1)))
    (array.set $b
      (local.get 1)
      (i32.const 2)
      (i32.const 3))
    (drop
      (array.new_fixed $a 2
        (i32.const 1)
        (i32.const 1)))
    (drop
      (array.new_data $a $data
        (i32.const 0)
        (i32.const 4)))
    (drop
      (array.new_elem $c $elem
        (i32.const 0)
        (i32.const 1)))
    (array.copy $b $b
      (local.get 1)
      (i32.const 0)
      (local.get 1)
      (i32.const 0)
      (i32.const 1))
  )
  (data $data (;0;) "\5c0\5c1\5c2\5c3")
)
